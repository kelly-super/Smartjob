<!-- Add this CSS in the head section or your stylesheet -->
<style>
#searchResults {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 0.25rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    max-height: 200px;
    overflow-y: auto;
    z-index: 1050;
}

#searchResults .list-group-item {
    cursor: pointer;
    padding: 0.5rem 1rem;
}

#searchResults .list-group-item:hover {
    background-color: #f8f9fa;
}

.search-container {
    position: relative;
}
</style>

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h4>New Quote</h4>
        <div>
            <button type="button" class="btn btn-secondary" id="previewPDF">
                <i class="bi bi-file-pdf"></i> Preview PDF
            </button>
        </div>
    </div>
    
    <div class="card-body">
        <form id="create-quote-form">
            <!-- Client Search and Selection -->
            <div class="mb-4">
                <h5 class="border-bottom pb-2">Client Information</h5>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3 search-container">
                            <label class="form-label">Search Client</label>
                            <div class="input-group">
                                <input type="text" 
                                       class="form-control" 
                                       id="client_search" 
                                       placeholder="Search by name, mobile or property">
                                <button type="button" 
                                        class="btn btn-primary" 
                                        data-bs-toggle="modal" 
                                        data-bs-target="#addClientModal">
                                    <i class="bi bi-plus-circle"></i> New Client
                                </button>
                            </div>
                            <!-- Search Results Dropdown -->
                            <div id="searchResults" class="d-none"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <!-- Selected Client Info Card -->
                        <div id="selectedClientCard" class="card d-none">
                            <div class="card-body">
                                <h6 class="card-subtitle mb-2 text-muted">Selected Client</h6>
                                <div id="selectedClientInfo">
                                    <input type="hidden" id="client_id" name="client_id" required>
                                    <p class="mb-1"><strong>Name:</strong> <span id="display_name"></span></p>
                                    <p class="mb-1"><strong>Mobile:</strong> <span id="display_mobile"></span></p>
                                    <p class="mb-1"><strong>Email:</strong> <span id="display_email"></span></p>
                                    <p class="mb-1"><strong>Address:</strong> <span id="display_address"></span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quote Details -->
            <div class="mb-4">
                <h5 class="border-bottom pb-2">Quote Details</h5>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Property Address</label>
                            <input type="text" 
                                   class="form-control" 
                                   name="quote_property_address" 
                                   id="quote_property_address"
                                   required>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-3">
                            <label class="form-label">Contact Number</label>
                            <input type="tel" 
                                   class="form-control" 
                                   name="contact_number"
                                   id="contact_number">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="mb-3">
                            <label class="form-label">Contact Email</label>
                            <input type="email" 
                                   class="form-control" 
                                   name="contact_email"
                                   id="contact_email">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Service Items -->
            <div class="mb-4">
                <h5 class="border-bottom pb-2 d-flex justify-content-between align-items-center">
                    Service Items
                    <button type="button" class="btn btn-success btn-sm" id="addServiceItem">
                        <i class="bi bi-plus-lg"></i> Add Service
                    </button>
                </h5>
                <div id="serviceItems">
                    <div class="service-item card mb-3">
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label class="form-label">Service Name</label>
                                    <input type="text" 
                                           class="form-control" 
                                           name="item_name[]" 
                                           required>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">Description</label>
                                    <textarea class="form-control" 
                                              name="item_description[]" 
                                              rows="1"></textarea>
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Price ($)</label>
                                    <input type="number" 
                                           class="form-control calc-total" 
                                           name="item_price[]" 
                                           step="0.01" 
                                           required>
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Discount ($)</label>
                                    <input type="number" 
                                           class="form-control calc-total" 
                                           name="item_discount[]" 
                                           step="0.01" 
                                           value="0">
                                </div>
                                <div class="col-12">
                                    <label class="form-label">Remark</label>
                                    <div class="input-group">
                                        <input type="text" 
                                               class="form-control" 
                                               name="item_remark[]">
                                        <button type="button" 
                                                class="btn btn-outline-danger remove-item">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quote Summary -->
            <div class="row justify-content-end">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Quote Summary</h5>
                            <div class="mb-2">
                                <label class="form-label">Subtotal</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="text" 
                                           class="form-control" 
                                           id="subtotal" 
                                           readonly>
                                </div>
                            </div>
                            <div class="mb-2">
                                <label class="form-label">GST (15%)</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="text" 
                                           class="form-control" 
                                           id="gst" 
                                           readonly>
                                </div>
                            </div>
                            <div class="mb-2">
                                <label class="form-label">Total Amount</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="text" 
                                           class="form-control" 
                                           id="total" 
                                           name="quote_price" 
                                           readonly>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Form Actions -->
            <div class="mt-4 text-end">
                <a href="/quotes" class="btn btn-secondary">Cancel</a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Create Quote
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Add Client Modal -->
<div class="modal fade" id="addClientModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Client</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addClientForm">
                    <div class="mb-3">
                        <label class="form-label">Last Name</label>
                        <input type="text" class="form-control" name="client_lastname" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">First Name</label>
                        <input type="text" class="form-control" name="client_surname">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mobile</label>
                        <input type="tel" class="form-control" name="client_mobile">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" name="client_email">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Address</label>
                        <input type="text" class="form-control" name="client_address">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveClientBtn">Save Client</button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const clientSearch = document.getElementById('client_search');
    const searchResults = document.getElementById('searchResults');
    let searchTimeout;

    clientSearch.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        const searchTerm = this.value.trim();
        
        if (searchTerm.length < 2) {
            searchResults.classList.add('d-none');
            return;
        }

        searchResults.innerHTML = `
            <div class="list-group">
                <div class="list-group-item text-center">
                    <div class="spinner-border spinner-border-sm" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>`;
        searchResults.classList.remove('d-none');

        searchTimeout = setTimeout(() => {
            fetch(`/clients/search?term=${encodeURIComponent(searchTerm)}`, {
                headers: {
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(clients => {
                if (clients.length === 0) {
                    searchResults.innerHTML = `
                        <div class="list-group">
                            <div class="list-group-item text-muted">
                                No clients found
                            </div>
                        </div>`;
                } else {
                    searchResults.innerHTML = `
                        <div class="list-group">
                            ${clients.map(client => `
                                <button type="button" 
                                        class="list-group-item list-group-item-action"
                                        onclick='selectClient(${JSON.stringify(client)})'>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <strong>${client.client_lastname} ${client.client_surname || ''}</strong>
                                            ${client.client_mobile ? `<br><small>${client.client_mobile}</small>` : ''}
                                        </div>
                                        ${client.client_address ? 
                                            `<small class="text-muted">${client.client_address}</small>` : ''}
                                    </div>
                                </button>
                            `).join('')}
                        </div>`;
                }
            })
            .catch(error => {
                console.error('Search error:', error);
                searchResults.innerHTML = `
                    <div class="list-group">
                        <div class="list-group-item text-danger">
                            Error searching clients. Please try again.
                        </div>
                    </div>`;
            });
        }, 300);
    });

    // Close search results when clicking outside
    document.addEventListener('click', function(e) {
        if (!searchResults.contains(e.target) && e.target !== clientSearch) {
            searchResults.classList.add('d-none');
        }
    });

    // Handle client selection
    window.selectClient = function(client) {
        // Update hidden inputs and display
        document.getElementById('client_id').value = client.client_id;
        document.getElementById('display_name').textContent = 
            `${client.client_lastname} ${client.client_surname}`;
        document.getElementById('display_mobile').textContent = client.client_mobile || 'N/A';
        document.getElementById('display_email').textContent = client.client_email || 'N/A';
        document.getElementById('display_address').textContent = client.client_address || 'N/A';
        
        // Auto-fill quote details
        document.getElementById('quote_property_address').value = client.client_address || '';
        document.getElementById('contact_number').value = client.client_mobile || '';
        document.getElementById('contact_email').value = client.client_email || '';
        
        document.getElementById('selectedClientCard').classList.remove('d-none');
        searchResults.classList.add('d-none');
        clientSearch.value = `${client.client_lastname} ${client.client_surname}`;
    };

    // Add new client
    document.getElementById('saveClientBtn').addEventListener('click', function() {
        const formData = new FormData(document.getElementById('addClientForm'));
        const clientData = Object.fromEntries(formData);
        
        fetch('/clients/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(clientData)
        })
        .then(res => res.json())
        .then(data => {
            if (data.client) {
                selectClient(data.client); // This will auto-fill the quote details
                bootstrap.Modal.getInstance(document.getElementById('addClientModal')).hide();
                document.getElementById('addClientForm').reset();
            } else {
                throw new Error(data.message || 'Error creating client');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert(error.message);
        });
    });

    // Service items management
    const serviceItems = document.getElementById('serviceItems');
    const serviceItemTemplate = serviceItems.children[0].cloneNode(true);

    document.getElementById('addServiceItem').addEventListener('click', function() {
        const newItem = serviceItemTemplate.cloneNode(true);
        newItem.querySelectorAll('input, textarea').forEach(input => input.value = '');
        serviceItems.appendChild(newItem);
    });

    serviceItems.addEventListener('click', function(e) {
        if (e.target.classList.contains('remove-item') || 
            e.target.closest('.remove-item')) {
            if (serviceItems.children.length > 1) {
                e.target.closest('.service-item').remove();
                calculateTotals();
            }
        }
    });

    // Calculate totals
    function calculateTotals() {
        let subtotal = 0;
        const items = document.querySelectorAll('.service-item');
        
        items.forEach(item => {
            const price = parseFloat(item.querySelector('[name="item_price[]"]').value) || 0;
            const discount = parseFloat(item.querySelector('[name="item_discount[]"]').value) || 0;
            subtotal += price - discount;
        });

        const gst = subtotal * 0.15;
        const total = subtotal + gst;

        document.getElementById('subtotal').value = subtotal.toFixed(2);
        document.getElementById('gst').value = gst.toFixed(2);
        document.getElementById('total').value = total.toFixed(2);
    }

    serviceItems.addEventListener('input', function(e) {
        if (e.target.classList.contains('calc-total')) {
            calculateTotals();
        }
    });

    // Preview PDF
    document.getElementById('previewPDF').addEventListener('click', function() {
        const formData = new FormData(document.getElementById('create-quote-form'));
        fetch('/generate-pdf', {
            method: 'POST',
            body: formData
        })
        .then(res => res.blob())
        .then(blob => {
            const url = window.URL.createObjectURL(blob);
            window.open(url, '_blank');
        });
    });

    // Form submission
    document.getElementById('create-quote-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Validate required fields
        if (!document.getElementById('client_id').value) {
            alert('Please select a client');
            return;
        }
        const clientName = document.getElementById('display_name').textContent;
        // Gather form data
        const formData = new FormData(this);
        const quoteData = {
            client_id: formData.get('client_id'),
            client_name: clientName,
            quote_property_address: formData.get('quote_property_address'),
            contact_number: formData.get('contact_number'),
            contact_email: formData.get('contact_email'),
            quote_price: document.getElementById('total').value,
            items: Array.from(document.querySelectorAll('.service-item')).map(item => ({
                item_name: item.querySelector('[name="item_name[]"]').value,
                item_description: item.querySelector('[name="item_description[]"]').value,
                item_price: item.querySelector('[name="item_price[]"]').value,
                item_discount: item.querySelector('[name="item_discount[]"]').value,
                item_remark: item.querySelector('[name="item_remark[]"]').value,
            }))
        };

        // Send request
        fetch('/quotes/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(quoteData)
        })
        .then(res => {
            if (!res.ok) {
                throw new Error('Network response was not ok');
            }
            return res.json();
        })
        .then(data => {
            if (data.success) {
                window.location.href = `/quotes/${data.quoteId}`;
            } else {
                throw new Error(data.message || 'Error creating quote');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert(error.message);
        });
    });

    // Initial calculation
    calculateTotals();
});
</script>