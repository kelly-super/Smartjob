<!-- Add this CSS in the head section or your stylesheet -->
<style>
#searchResults {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 0.25rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    max-height: 200px;
    overflow-y: auto;
    z-index: 1050;
}

#searchResults .list-group-item {
    cursor: pointer;
    padding: 0.5rem 1rem;
}

#searchResults .list-group-item:hover {
    background-color: #f8f9fa;
}

.search-container {
    position: relative;
}
</style>

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h4>New Quote</h4>
        <div>
            <button type="button" class="btn btn-secondary" id="previewPDF">
                <i class="bi bi-file-pdf"></i> Preview PDF
            </button>
        </div>
    </div>
    
    <div class="card-body">
        <form id="create-quote-form">
            <!-- Client Selection Section -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <h5 class="border-bottom pb-2">Client Information</h5>
                    <div class="mb-3 search-container">
                        <label class="form-label">Search Client</label>
                        <div class="input-group">
                            <input type="text" 
                                   class="form-control" 
                                   id="client_search" 
                                   placeholder="Search by name, mobile or address">
                            <button type="button" 
                                    class="btn btn-primary" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#addClientModal">
                                <i class="bi bi-plus-circle"></i> New Client
                            </button>
                        </div>
                        <div id="searchResults" class="d-none"></div>
                    </div>
                    <!-- Selected Client Info -->
                    <div id="selectedClientCard" class="card d-none">
                        <div class="card-body">
                            <input type="hidden" id="client_id" name="client_id" required>
                            <div class="row">
                                <div class="col-sm-4"><strong>Name:</strong></div>
                                <div class="col-sm-8" id="display_name"></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4"><strong>Mobile:</strong></div>
                                <div class="col-sm-8" id="display_mobile"></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4"><strong>Email:</strong></div>
                                <div class="col-sm-8" id="display_email"></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4"><strong>Address:</strong></div>
                                <div class="col-sm-8" id="display_address"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quote Details -->
                <div class="col-md-6">
                    <h5 class="border-bottom pb-2">Quote Details</h5>
                    <div class="mb-3">
                        <label class="form-label">Property Address</label>
                        <input type="text" 
                               class="form-control" 
                               name="quote_property_address" 
                               id="quote_property_address"
                               required>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Contact Number</label>
                                <input type="tel" 
                                       class="form-control" 
                                       name="contact_number"
                                       id="contact_number">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Contact Email</label>
                                <input type="email" 
                                       class="form-control" 
                                       name="contact_email"
                                       id="contact_email">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Items Table -->
            <div class="mb-4">
                <h5 class="border-bottom pb-2 d-flex justify-content-between align-items-center">
                    Quote Items
                    <button type="button" class="btn btn-success btn-sm" onclick="addItem()">
                        <i class="bi bi-plus-lg"></i> Add Item
                    </button>
                </h5>
                <div class="table-responsive">
                    <table class="table table-bordered" id="items-table">
                        <thead class="table-light">
                            <tr>
                                <th>Item</th>
                                <th>Description</th>
                                <th >Price</th>
                                <th >Quantity</th>
                                <th >Discount</th>
                                <th >Total</th>
                                <th >Action</th>
                            </tr>
                        </thead>
                                             

                        <tbody>
                            <!-- Items will be added here dynamically -->
                        </tbody>
                    </table>
                </div>
            </div>
                <!-- Totals -->
                <div class="col-md-4 offset-md-8">
                    <div class="card bg-light">
                        <div class="card-body">
                            <div class="row g-2">
                                <div class="col-6">Subtotal:</div>
                                <div class="col-6 text-end" id="subtotal">$0.00</div>
                                
                                <div class="col-6">GST (15%):</div>
                                <div class="col-6 text-end" id="gst">$0.00</div>
                                
                                <div class="col-6 fw-bold">Total:</div>
                                <div class="col-6 text-end fw-bold" id="total">$0.00</div>
                                
                                <input type="hidden" name="total_amount" id="total_amount">
                                <input type="hidden" name="tax_amount" id="tax_amount">
                            </div>
                        </div>
                    </div>
                </div>

            <!-- Form Actions -->
            <div class="text-end mt-4">
                <a href="/quotes" class="btn btn-secondary me-2">Cancel</a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Create Quote
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Add Client Modal -->
<div class="modal fade" id="addClientModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Client</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addClientForm">
                    <div class="mb-3">
                        <label class="form-label">Last Name</label>
                        <input type="text" class="form-control" name="client_lastname" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">First Name</label>
                        <input type="text" class="form-control" name="client_surname">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mobile</label>
                        <input type="tel" class="form-control" name="client_mobile">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" name="client_email">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Address</label>
                        <input type="text" class="form-control" name="client_address">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveClientBtn">Save Client</button>
            </div>
        </div>
    </div>
</div>

<script>
let itemCount = 0;

// Client search functionality
document.getElementById('client_search').addEventListener('input', async function(e) {
    const searchTerm = e.target.value.trim();
    const searchResults = document.getElementById('searchResults');
    
    if (searchTerm.length < 2) {
        searchResults.classList.add('d-none');
        return;
    }

    try {
        const response = await fetch(`/clients/search?term=${encodeURIComponent(searchTerm)}`);
        const clients = await response.json();
        
        if (clients.length > 0) {
            searchResults.innerHTML = clients.map(client => `
                <div class="list-group-item" onclick="selectClient(${JSON.stringify(client).replace(/"/g, '&quot;')})">
                    ${client.client_lastname} ${client.client_surname}
                    <br>
                    <small class="text-muted">${client.client_mobile || ''}</small>
                </div>
            `).join('');
            searchResults.classList.remove('d-none');
        } else {
            searchResults.innerHTML = '<div class="list-group-item">No clients found</div>';
            searchResults.classList.remove('d-none');
        }
    } catch (error) {
        console.error('Error searching clients:', error);
    }
});

// Replace the existing selectClient function
function selectClient(client) {
    // Update hidden input and display card
    document.getElementById('client_id').value = client.client_id;
    document.getElementById('display_name').textContent = `${client.client_lastname} ${client.client_surname}`;
    document.getElementById('display_mobile').textContent = client.client_mobile || '-';
    document.getElementById('display_email').textContent = client.client_email || '-';
    document.getElementById('display_address').textContent = client.client_address || '-';
    
    // Auto-fill quote details
    document.getElementById('quote_property_address').value = client.client_address || '';
    document.getElementById('contact_number').value = client.client_mobile || '';
    document.getElementById('contact_email').value = client.client_email || '';
    
    // Update UI
    document.getElementById('selectedClientCard').classList.remove('d-none');
    document.getElementById('searchResults').classList.add('d-none');
    document.getElementById('client_search').value = '';
}

// Add this new function after selectClient
function clearQuoteDetails() {
    document.getElementById('quote_property_address').value = '';
    document.getElementById('contact_number').value = '';
    document.getElementById('contact_email').value = '';
}

// Add this event listener to clear form when starting a new client search
document.getElementById('client_search').addEventListener('focus', function() {
    if (document.getElementById('client_id').value) {
        if (confirm('Do you want to select a different client? This will clear the current quote details.')) {
            document.getElementById('client_id').value = '';
            document.getElementById('selectedClientCard').classList.add('d-none');
            clearQuoteDetails();
        } else {
            this.blur();
        }
    }
});

// Add new client
document.getElementById('saveClientBtn').addEventListener('click', async function() {
    const form = document.getElementById('addClientForm');
    const formData = new FormData(form);
    const clientData = Object.fromEntries(formData.entries());

    try {
        const response = await fetch('/clients/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(clientData)
        });

        const result = await response.json();
        
        if (result.success) {
            // Close modal and select the new client
            const modal = bootstrap.Modal.getInstance(document.getElementById('addClientModal'));
            modal.hide();
            selectClient(result.client);
            form.reset();
        } else {
            alert(result.message || 'Error creating client');
        }
    } catch (error) {
        console.error('Error creating client:', error);
        alert('Error creating client');
    }
});

// Item management
function addItem() {
    const tbody = document.querySelector('#items-table tbody');
    const row = document.createElement('tr');
    row.innerHTML = `
        <td>
            <input type="text" class="form-control" name="items[${itemCount}][name]" required>
        </td>
        <td>
            <input type="text" class="form-control" name="items[${itemCount}][description]">
        </td>
        <td>
            <input type="number" class="form-control item-price" name="items[${itemCount}][price]" 
                   step="0.01" value="0.00" required oninput="calculateTotal(this)">
        </td>
        <td>
            <input type="number" class="form-control item-quantity" name="items[${itemCount}][quantity]" 
                   value="1" min="1" required oninput="calculateTotal(this)">
        </td>
        <td>
            <input type="number" class="form-control item-discount" name="items[${itemCount}][discount]" 
                   value="0.00" step="0.01" oninput="calculateTotal(this)">
        </td>
        <td>
            <input type="number" class="form-control item-total" name="items[${itemCount}][total]" 
                   value="0.00" readonly>
        </td>
        <td>
            <button type="button" class="btn btn-sm btn-danger" onclick="removeItem(this)">
                <i class="bi bi-trash"></i>
            </button>
        </td>
    `;
    tbody.appendChild(row);
    itemCount++;
    calculateTotal(row.querySelector('.item-price'));
}

function removeItem(button) {
    button.closest('tr').remove();
    updateTotals();
}

function calculateTotal(input) {
    const row = input.closest('tr');
    const price = parseFloat(row.querySelector('.item-price').value) || 0;
    const quantity = parseInt(row.querySelector('.item-quantity').value) || 1;
    const discount = parseFloat(row.querySelector('.item-discount').value) || 0;
    const total = (price * quantity) - discount;
    row.querySelector('.item-total').value = total.toFixed(2);
    updateTotals();
}

function updateTotals() {
    let subtotal = 0;
    document.querySelectorAll('.item-total').forEach(input => {
        subtotal += parseFloat(input.value) || 0;
    });

    const gst = subtotal * 0.15;
    const total = subtotal + gst;

    document.getElementById('subtotal').textContent = `$${subtotal.toFixed(2)}`;
    document.getElementById('gst').textContent = `$${gst.toFixed(2)}`;
    document.getElementById('total').textContent = `$${total.toFixed(2)}`;
    
    document.getElementById('total_amount').value = total.toFixed(2);
    document.getElementById('tax_amount').value = gst.toFixed(2);
}

// Form submission
document.getElementById('create-quote-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    if (!document.getElementById('client_id').value) {
        alert('Please select a client');
        return;
    }

    try {
        const items = Array.from(document.querySelectorAll('#items-table tbody tr')).map(row => ({
            item_name: row.querySelector('[name$="[name]"]').value,
            item_description: row.querySelector('[name$="[description]"]').value,
            item_price: parseFloat(row.querySelector('[name$="[price]"]').value) || 0,
            item_quantity: parseInt(row.querySelector('[name$="[quantity]"]').value) || 1,
            item_discount_price: parseFloat(row.querySelector('[name$="[discount]"]').value) || 0,
            item_total_price: parseFloat(row.querySelector('[name$="[total]"]').value) || 0
        }));

        const quoteData = {
            client_id: document.getElementById('client_id').value,
            quote_property_address: document.getElementById('quote_property_address').value,
            contact_number: document.getElementById('contact_number').value,
            contact_email: document.getElementById('contact_email').value,
            total_amount: parseFloat(document.getElementById('total_amount').value),
            tax_amount: parseFloat(document.getElementById('tax_amount').value),
            items: items
        };

        const response = await fetch('/quotes/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(quoteData)
        });

        const result = await response.json();
        
        if (result.success) {
            window.location.href = `/quotes/${result.quoteId}`;
        } else {
            throw new Error(result.message || 'Error creating quote');
        }
    } catch (error) {
        console.error('Error creating quote:', error);
        alert(error.message || 'Failed to create quote. Please try again.');
    }
});

// Initialize first item row
document.addEventListener('DOMContentLoaded', () => {
    addItem();
});
</script>

